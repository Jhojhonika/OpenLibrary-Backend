2025-01-19T00:15:20.989+05:30  INFO 14640 --- [BookManagementAPI] [cluster-ClusterId{value='678bb32f54421c62cb2bdc59', description='null'}-bookappcluster-shard-00-01.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Exception in monitor thread while connecting to server bookappcluster-shard-00-01.ngexk.mongodb.net:27017

com.mongodb.MongoSocketReadTimeoutException: Timeout while receiving message
	at com.mongodb.internal.connection.InternalStreamConnection.createReadTimeoutException(InternalStreamConnection.java:824) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.translateReadException(InternalStreamConnection.java:812) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:862) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveCommandMessageResponse(InternalStreamConnection.java:517) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receive(InternalStreamConnection.java:469) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.lookupServerDescription(DefaultServerMonitor.java:249) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitor.run(DefaultServerMonitor.java:176) ~[mongodb-driver-core-5.2.1.jar:na]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.base/sun.nio.ch.NioSocketImpl.timedRead(NioSocketImpl.java:278) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.implRead(NioSocketImpl.java:304) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl.read(NioSocketImpl.java:346) ~[na:na]
	at java.base/sun.nio.ch.NioSocketImpl$1.read(NioSocketImpl.java:796) ~[na:na]
	at java.base/java.net.Socket$SocketInputStream.implRead(Socket.java:1116) ~[na:na]
	at java.base/java.net.Socket$SocketInputStream.read(Socket.java:1103) ~[na:na]
	at java.base/sun.security.ssl.SSLSocketInputRecord.read(SSLSocketInputRecord.java:489) ~[na:na]
	at java.base/sun.security.ssl.SSLSocketInputRecord.readHeader(SSLSocketInputRecord.java:483) ~[na:na]
	at java.base/sun.security.ssl.SSLSocketInputRecord.bytesInCompletePacket(SSLSocketInputRecord.java:70) ~[na:na]
	at java.base/sun.security.ssl.SSLSocketImpl.readApplicationRecord(SSLSocketImpl.java:1462) ~[na:na]
	at java.base/sun.security.ssl.SSLSocketImpl$AppInputStream.read(SSLSocketImpl.java:1068) ~[na:na]
	at com.mongodb.internal.connection.SocketStream.read(SocketStream.java:182) ~[mongodb-driver-core-5.2.1.jar:na]
	at com.mongodb.internal.connection.InternalStreamConnection.receiveResponseBuffers(InternalStreamConnection.java:829) ~[mongodb-driver-core-5.2.1.jar:na]
	... 4 common frames omitted

2025-01-19T00:15:22.158+05:30  INFO 14640 --- [BookManagementAPI] [cluster-ClusterId{value='678bb32f54421c62cb2bdc59', description='null'}-bookappcluster-shard-00-01.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=220266800, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=211, topologyVersion=TopologyVersion{processId=678be01df813b57539ad5286, counter=5}, lastWriteDate=Sun Jan 19 00:15:22 IST 2025, lastUpdateTimeNanos=44940616594600}
2025-01-19T00:16:16.121+05:30  INFO 14640 --- [BookManagementAPI] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-01-19T00:16:16.145+05:30  INFO 14640 --- [BookManagementAPI] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-01-19T00:16:25.698+05:30  INFO 6760 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : Starting BookManagementApiApplication using Java 23 with PID 6760 (G:\veloriz-backend\book-management\target\classes started by HP in G:\veloriz-backend\book-management)
2025-01-19T00:16:25.702+05:30  INFO 6760 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : No active profile set, falling back to 1 default profile: "default"
2025-01-19T00:16:28.003+05:30  INFO 6760 --- [BookManagementAPI] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-01-19T00:16:28.173+05:30  INFO 6760 --- [BookManagementAPI] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 152 ms. Found 1 MongoDB repository interface.
2025-01-19T00:16:30.335+05:30  INFO 6760 --- [BookManagementAPI] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-01-19T00:16:30.371+05:30  INFO 6760 --- [BookManagementAPI] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-01-19T00:16:30.372+05:30  INFO 6760 --- [BookManagementAPI] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-01-19T00:16:30.495+05:30  INFO 6760 --- [BookManagementAPI] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-01-19T00:16:30.496+05:30  INFO 6760 --- [BookManagementAPI] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4595 ms
2025-01-19T00:16:31.545+05:30  INFO 6760 --- [BookManagementAPI] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/23+37-2369"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='jhojhonika', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@76d72b5b, com.mongodb.Jep395RecordCodecProvider@7cac93fe, com.mongodb.KotlinCodecProvider@479b5066]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=bookappcluster.ngexk.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-sa64zi-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-01-19T00:16:31.578+05:30  INFO 6760 --- [BookManagementAPI] [cluster-ClusterId{value='678bf70796b55165f3f4fdde', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-00.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T00:16:31.636+05:30  INFO 6760 --- [BookManagementAPI] [cluster-ClusterId{value='678bf70796b55165f3f4fdde', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-02.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T00:16:31.644+05:30  INFO 6760 --- [BookManagementAPI] [cluster-ClusterId{value='678bf70796b55165f3f4fdde', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-01.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T00:16:33.717+05:30  INFO 6760 --- [BookManagementAPI] [cluster-ClusterId{value='678bf70796b55165f3f4fdde', description='null'}-bookappcluster-shard-00-00.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-00.ngexk.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1279269400, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-00.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=211, topologyVersion=TopologyVersion{processId=678bdeddd6fed8f2993c3fef, counter=5}, lastWriteDate=Sun Jan 19 00:16:33 IST 2025, lastUpdateTimeNanos=45012170630500}
2025-01-19T00:16:33.719+05:30  INFO 6760 --- [BookManagementAPI] [cluster-ClusterId{value='678bf70796b55165f3f4fdde', description='null'}-bookappcluster-shard-00-01.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1263402900, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=211, topologyVersion=TopologyVersion{processId=678be01df813b57539ad5286, counter=5}, lastWriteDate=Sun Jan 19 00:16:33 IST 2025, lastUpdateTimeNanos=45012169891000}
2025-01-19T00:16:33.720+05:30  INFO 6760 --- [BookManagementAPI] [cluster-ClusterId{value='678bf70796b55165f3f4fdde', description='null'}-bookappcluster-shard-00-02.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-02.ngexk.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=1271219100, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-02.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000251, setVersion=211, topologyVersion=TopologyVersion{processId=678bde1e4b6163d40b373cfc, counter=9}, lastWriteDate=Sun Jan 19 00:16:33 IST 2025, lastUpdateTimeNanos=45012171873500}
2025-01-19T00:16:33.726+05:30  INFO 6760 --- [BookManagementAPI] [cluster-ClusterId{value='678bf70796b55165f3f4fdde', description='null'}-bookappcluster-shard-00-02.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Discovered replica set primary bookappcluster-shard-00-02.ngexk.mongodb.net:27017 with max election id 7fffffff0000000000000251 and max set version 211
2025-01-19T00:16:34.271+05:30  INFO 6760 --- [BookManagementAPI] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-01-19T00:16:34.294+05:30  INFO 6760 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : Started BookManagementApiApplication in 9.921 seconds (process running for 14.403)
2025-01-19T00:58:48.737+05:30  INFO 6760 --- [BookManagementAPI] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-01-19T00:58:48.770+05:30  INFO 6760 --- [BookManagementAPI] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
2025-01-19T12:18:28.651+05:30  INFO 12616 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : Starting BookManagementApiApplication using Java 23 with PID 12616 (G:\veloriz-backend\book-management\target\classes started by HP in G:\veloriz-backend\book-management)
2025-01-19T12:18:28.704+05:30  INFO 12616 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : No active profile set, falling back to 1 default profile: "default"
2025-01-19T12:18:31.199+05:30  INFO 12616 --- [BookManagementAPI] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-01-19T12:18:31.381+05:30  INFO 12616 --- [BookManagementAPI] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 161 ms. Found 1 MongoDB repository interface.
2025-01-19T12:18:32.883+05:30  INFO 12616 --- [BookManagementAPI] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-01-19T12:18:32.925+05:30  INFO 12616 --- [BookManagementAPI] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-01-19T12:18:32.926+05:30  INFO 12616 --- [BookManagementAPI] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-01-19T12:18:33.151+05:30  INFO 12616 --- [BookManagementAPI] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-01-19T12:18:33.152+05:30  INFO 12616 --- [BookManagementAPI] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4209 ms
2025-01-19T12:18:35.117+05:30  INFO 12616 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04234b73c1c363d4edf', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-00.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T12:18:35.142+05:30  INFO 12616 --- [BookManagementAPI] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/23+37-2369"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='jhojhonika', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@3d20e575, com.mongodb.Jep395RecordCodecProvider@3252747e, com.mongodb.KotlinCodecProvider@2b4b96a4]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=bookappcluster.ngexk.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-sa64zi-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-01-19T12:18:35.223+05:30  INFO 12616 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04234b73c1c363d4edf', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-02.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T12:18:35.238+05:30  INFO 12616 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04234b73c1c363d4edf', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-01.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T12:18:40.192+05:30  INFO 12616 --- [BookManagementAPI] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path '/'
2025-01-19T12:18:40.213+05:30  INFO 12616 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : Started BookManagementApiApplication in 13.558 seconds (process running for 15.612)
2025-01-19T12:18:40.708+05:30  INFO 12616 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04234b73c1c363d4edf', description='null'}-bookappcluster-shard-00-02.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-02.ngexk.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2205578900, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-02.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000251, setVersion=211, topologyVersion=TopologyVersion{processId=678bde1e4b6163d40b373cfc, counter=9}, lastWriteDate=Sun Jan 19 12:18:40 IST 2025, lastUpdateTimeNanos=9508634427700}
2025-01-19T12:18:40.708+05:30  INFO 12616 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04234b73c1c363d4edf', description='null'}-bookappcluster-shard-00-00.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-00.ngexk.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2223611000, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-00.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=211, topologyVersion=TopologyVersion{processId=678bdeddd6fed8f2993c3fef, counter=5}, lastWriteDate=Sun Jan 19 12:18:40 IST 2025, lastUpdateTimeNanos=9508636515700}
2025-01-19T12:18:40.708+05:30  INFO 12616 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04234b73c1c363d4edf', description='null'}-bookappcluster-shard-00-01.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2195740900, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=211, topologyVersion=TopologyVersion{processId=678be01df813b57539ad5286, counter=5}, lastWriteDate=Sun Jan 19 12:18:40 IST 2025, lastUpdateTimeNanos=9508636179600}
2025-01-19T12:18:40.725+05:30  INFO 12616 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04234b73c1c363d4edf', description='null'}-bookappcluster-shard-00-02.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Discovered replica set primary bookappcluster-shard-00-02.ngexk.mongodb.net:27017 with max election id 7fffffff0000000000000251 and max set version 211
2025-01-19T12:18:40.737+05:30  INFO 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-01-19T12:18:40.739+05:30  INFO 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2025-01-19T12:18:40.746+05:30  INFO 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 6 ms
2025-01-19T12:18:41.045+05:30  INFO 512 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : Starting BookManagementApiApplication using Java 23 with PID 512 (G:\veloriz-backend\book-management\target\classes started by HP in G:\veloriz-backend\book-management)
2025-01-19T12:18:41.053+05:30  INFO 512 --- [BookManagementAPI] [main] c.e.b.BookManagementApiApplication       : No active profile set, falling back to 1 default profile: "default"
2025-01-19T12:18:41.749+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:18:41.887+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:18:44.105+05:30  INFO 512 --- [BookManagementAPI] [main] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2025-01-19T12:18:44.206+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-4] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:18:44.209+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-4] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:18:44.386+05:30  INFO 512 --- [BookManagementAPI] [main] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 228 ms. Found 1 MongoDB repository interface.
2025-01-19T12:18:45.661+05:30  INFO 512 --- [BookManagementAPI] [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)
2025-01-19T12:18:45.699+05:30  INFO 512 --- [BookManagementAPI] [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2025-01-19T12:18:45.700+05:30  INFO 512 --- [BookManagementAPI] [main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.34]
2025-01-19T12:18:45.846+05:30  INFO 512 --- [BookManagementAPI] [main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2025-01-19T12:18:45.847+05:30  INFO 512 --- [BookManagementAPI] [main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 4403 ms
2025-01-19T12:18:46.427+05:30  INFO 512 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04e02e5ce0332dbef25', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-00.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T12:18:46.523+05:30  INFO 512 --- [BookManagementAPI] [main] org.mongodb.driver.client                : MongoClient with metadata {"driver": {"name": "mongo-java-driver|sync|spring-boot", "version": "5.2.1"}, "os": {"type": "Windows", "name": "Windows 10", "architecture": "amd64", "version": "10.0"}, "platform": "Java/Oracle Corporation/23+37-2369"} created with settings MongoClientSettings{readPreference=primary, writeConcern=WriteConcern{w=majority, wTimeout=null ms, journal=null}, retryWrites=true, retryReads=true, readConcern=ReadConcern{level=null}, credential=MongoCredential{mechanism=null, userName='jhojhonika', source='admin', password=<hidden>, mechanismProperties=<hidden>}, transportSettings=null, commandListeners=[], codecRegistry=ProvidersCodecRegistry{codecProviders=[ValueCodecProvider{}, BsonValueCodecProvider{}, DBRefCodecProvider{}, DBObjectCodecProvider{}, DocumentCodecProvider{}, CollectionCodecProvider{}, IterableCodecProvider{}, MapCodecProvider{}, GeoJsonCodecProvider{}, GridFSFileCodecProvider{}, Jsr310CodecProvider{}, JsonObjectCodecProvider{}, BsonCodecProvider{}, EnumCodecProvider{}, com.mongodb.client.model.mql.ExpressionCodecProvider@5584d9c6, com.mongodb.Jep395RecordCodecProvider@3c9c6245, com.mongodb.KotlinCodecProvider@6d0be7ab]}, loggerSettings=LoggerSettings{maxDocumentLength=1000}, clusterSettings={hosts=[127.0.0.1:27017], srvHost=bookappcluster.ngexk.mongodb.net, srvServiceName=mongodb, mode=MULTIPLE, requiredClusterType=REPLICA_SET, requiredReplicaSetName='atlas-sa64zi-shard-0', serverSelector='null', clusterListeners='[]', serverSelectionTimeout='30000 ms', localThreshold='15 ms'}, socketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=0, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, heartbeatSocketSettings=SocketSettings{connectTimeoutMS=10000, readTimeoutMS=10000, receiveBufferSize=0, proxySettings=ProxySettings{host=null, port=null, username=null, password=null}}, connectionPoolSettings=ConnectionPoolSettings{maxSize=100, minSize=0, maxWaitTimeMS=120000, maxConnectionLifeTimeMS=0, maxConnectionIdleTimeMS=0, maintenanceInitialDelayMS=0, maintenanceFrequencyMS=60000, connectionPoolListeners=[], maxConnecting=2}, serverSettings=ServerSettings{heartbeatFrequencyMS=10000, minHeartbeatFrequencyMS=500, serverMonitoringMode=AUTO, serverListeners='[]', serverMonitorListeners='[]'}, sslSettings=SslSettings{enabled=true, invalidHostNameAllowed=false, context=null}, applicationName='null', compressorList=[], uuidRepresentation=JAVA_LEGACY, serverApi=null, autoEncryptionSettings=null, dnsClient=null, inetAddressResolver=null, contextProvider=null, timeoutMS=null}
2025-01-19T12:18:46.538+05:30  INFO 512 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04e02e5ce0332dbef25', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-02.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T12:18:46.559+05:30  INFO 512 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04e02e5ce0332dbef25', description='null'}-srv-bookappcluster.ngexk.mongodb.net] org.mongodb.driver.cluster               : Adding discovered server bookappcluster-shard-00-01.ngexk.mongodb.net:27017 to client view of cluster
2025-01-19T12:18:47.994+05:30  INFO 512 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04e02e5ce0332dbef25', description='null'}-bookappcluster-shard-00-00.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-00.ngexk.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=734479700, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-00.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az1'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=211, topologyVersion=TopologyVersion{processId=678bdeddd6fed8f2993c3fef, counter=5}, lastWriteDate=Sun Jan 19 12:18:47 IST 2025, lastUpdateTimeNanos=9515925369100}
2025-01-19T12:18:48.046+05:30  INFO 512 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04e02e5ce0332dbef25', description='null'}-bookappcluster-shard-00-01.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, type=REPLICA_SET_SECONDARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=744884500, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-01.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az3'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=211, topologyVersion=TopologyVersion{processId=678be01df813b57539ad5286, counter=5}, lastWriteDate=Sun Jan 19 12:18:47 IST 2025, lastUpdateTimeNanos=9515983240500}
2025-01-19T12:18:48.053+05:30  INFO 512 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04e02e5ce0332dbef25', description='null'}-bookappcluster-shard-00-02.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Monitor thread successfully connected to server with description ServerDescription{address=bookappcluster-shard-00-02.ngexk.mongodb.net:27017, type=REPLICA_SET_PRIMARY, cryptd=false, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=25, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=749962100, minRoundTripTimeNanos=0, setName='atlas-sa64zi-shard-0', canonicalAddress=bookappcluster-shard-00-02.ngexk.mongodb.net:27017, hosts=[bookappcluster-shard-00-02.ngexk.mongodb.net:27017, bookappcluster-shard-00-01.ngexk.mongodb.net:27017, bookappcluster-shard-00-00.ngexk.mongodb.net:27017], passives=[], arbiters=[], primary='bookappcluster-shard-00-02.ngexk.mongodb.net:27017', tagSet=TagSet{[Tag{name='availabilityZone', value='aps1-az2'}, Tag{name='diskState', value='READY'}, Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='AWS'}, Tag{name='region', value='AP_SOUTH_1'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff0000000000000251, setVersion=211, topologyVersion=TopologyVersion{processId=678bde1e4b6163d40b373cfc, counter=9}, lastWriteDate=Sun Jan 19 12:18:47 IST 2025, lastUpdateTimeNanos=9515989136100}
2025-01-19T12:18:48.054+05:30  INFO 512 --- [BookManagementAPI] [cluster-ClusterId{value='678ca04e02e5ce0332dbef25', description='null'}-bookappcluster-shard-00-02.ngexk.mongodb.net:27017] org.mongodb.driver.cluster               : Discovered replica set primary bookappcluster-shard-00-02.ngexk.mongodb.net:27017 with max election id 7fffffff0000000000000251 and max set version 211
2025-01-19T12:18:49.125+05:30  WARN 512 --- [BookManagementAPI] [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'
2025-01-19T12:18:49.198+05:30  INFO 512 --- [BookManagementAPI] [main] .s.b.a.l.ConditionEvaluationReportLogger : 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2025-01-19T12:18:49.278+05:30 ERROR 512 --- [BookManagementAPI] [main] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2025-01-19T12:19:42.831+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:42.836+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:19:42.946+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:42.949+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:19:47.872+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:47.876+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:19:47.990+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:47.993+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:19:56.179+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:56.183+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:19:57.499+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:57.501+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:19:58.887+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:58.890+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:19:59.008+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-5] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:19:59.010+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-5] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:20:30.186+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:20:30.188+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:20:34.562+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-9] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:20:34.571+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-9] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:20:34.721+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:20:34.723+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:20:45.101+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-4] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:20:45.103+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-4] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:22:31.092+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:22:31.094+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:22:56.622+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:22:56.624+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:22:56.727+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:22:56.728+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:25:59.599+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:25:59.615+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:25:59.749+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:25:59.751+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:29:32.554+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:29:32.556+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:29:32.664+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-5] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:29:32.665+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-5] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:37:37.981+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:37:37.986+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:37:38.126+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:37:38.129+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:40:34.966+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:40:34.968+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:40:35.075+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-9] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:40:35.077+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-9] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:56:44.894+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:56:44.896+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:56:45.009+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-9] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:56:45.010+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-9] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:58:16.479+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:58:16.481+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T12:58:16.947+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T12:58:16.951+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:26.762+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:26.766+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:26.878+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-10] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:26.879+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-10] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:32.970+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:32.973+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-8] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:33.078+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:33.081+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:38.363+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-5] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:38.368+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-5] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:38.483+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:38.485+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:51.101+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:51.103+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-1] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:56.099+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-4] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:56.103+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-4] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:04:56.204+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:04:56.212+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Mystery.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:05:25.152+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:05:25.155+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:05:25.270+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:05:25.273+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-3] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Romance.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:07:41.329+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:07:41.331+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:07:41.621+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:07:41.626+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-2] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:09:16.305+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:09:16.307+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-6] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T13:09:16.412+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.d.m.r.query.MongoQueryCreator        : Created query Query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}}, Fields: {}, Sort: {}
2025-01-19T13:09:16.414+05:30 DEBUG 12616 --- [BookManagementAPI] [http-nio-8080-exec-7] o.s.data.mongodb.core.MongoTemplate      : find using query: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} fields: Document{{}} sort: { "genre" : { "$regularExpression" : { "pattern" : ".*Fantasy.*", "options" : "i"}}} for class: class com.example.book_management.model.Book in collection: books
2025-01-19T14:02:51.396+05:30  INFO 12616 --- [BookManagementAPI] [SpringApplicationShutdownHook] o.s.b.w.e.tomcat.GracefulShutdown        : Commencing graceful shutdown. Waiting for active requests to complete
2025-01-19T14:02:51.413+05:30  INFO 12616 --- [BookManagementAPI] [tomcat-shutdown] o.s.b.w.e.tomcat.GracefulShutdown        : Graceful shutdown complete
